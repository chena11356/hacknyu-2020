{"moduleFile":{"sourceFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/services/tweetnacl.ts","jsFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/services/tweetnacl.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stablelib/base64","stellar-sdk","tweetnacl"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["tweetnacl","stellar-sdk","@stablelib/base64"],"potentialCmpRefs":[]},"jsText":"import nacl from 'tweetnacl';\r\nimport { Keypair } from 'stellar-sdk';\r\nimport { encode as encodeBase64, decode as decodeBase64 } from '@stablelib/base64';\r\nexport function encrypt(message, nonce, key) {\r\n    const encrypted = nacl.secretbox(message, nonce.slice(0, 24), key);\r\n    if (!encrypted)\r\n        throw 'Pincode encryption failed';\r\n    return {\r\n        cipher: encodeBase64(encrypted),\r\n        nonce: encodeBase64(nonce.slice(0, 24))\r\n    };\r\n}\r\nexport function decrypt(cipher, nonce, keyArr) {\r\n    const encryptedArr = decodeBase64(cipher);\r\n    const nonceArr = decodeBase64(nonce);\r\n    const decrypted = nacl.secretbox.open(encryptedArr, nonceArr, keyArr);\r\n    if (!decrypted)\r\n        throw 'Pincode decryption failed';\r\n    return Keypair.fromRawEd25519Seed(decrypted);\r\n}\r\n"}