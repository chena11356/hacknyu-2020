{"moduleFile":{"sourceFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewTransactions.ts","jsFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewTransactions.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@services/argon2","@services/error","@services/tweetnacl","lodash-es","stellar-sdk"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["stellar-sdk","lodash-es","@services/error"],"potentialCmpRefs":[]},"jsText":"import { Server } from 'stellar-sdk';\r\nimport { each as loEach } from 'lodash-es';\r\nimport { handleError } from '@services/error';\r\n// Truncate decimal strings\r\nfunction tdr(str) {\r\n    for (var i = 0; i < str.length; i++) {\r\n        if (str[i] == '.') {\r\n            return str.slice(0, i + 3);\r\n        }\r\n    }\r\n}\r\nexport default function viewTransactions() {\r\n    try {\r\n        var cur_account = this.account.publicKey;\r\n        // const account = 'GBZWOEGPINOUOYYNWP5RX7RSKN2ICX32IP5CLMLKGAVG4IDP62Q56KRG'\r\n        const server = new Server('https://horizon-testnet.stellar.org');\r\n        var transaction_type = \"\";\r\n        var transaction_source = \"\";\r\n        var transaction_issuer = \"\";\r\n        var transaction_destination = \"\";\r\n        var transaction_starting_balance = \"\";\r\n        var transaction_asset_code = \"\";\r\n        var transaction_amount = \"\";\r\n        var text = \"\";\r\n        server.transactions()\r\n            .forAccount(cur_account)\r\n            .call()\r\n            .then(({ records }) => {\r\n            loEach(records, (record) => {\r\n                return \"HHHH\";\r\n            });\r\n        })\r\n            .catch((err) => console.error(err));\r\n        return text;\r\n    }\r\n    catch (err) {\r\n        this.error = handleError(err);\r\n    }\r\n}\r\n"}