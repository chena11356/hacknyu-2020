{"moduleFile":{"sourceFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewTransactions.ts","jsFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewTransactions.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@services/argon2","@services/error","@services/tweetnacl","lodash-es","stellar-sdk"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["stellar-sdk","lodash-es","@services/error"],"potentialCmpRefs":[]},"jsText":"import { Transaction, Networks, Server } from 'stellar-sdk';\r\nimport { each as loEach } from 'lodash-es';\r\nimport { handleError } from '@services/error';\r\nexport default async function makePayment(destination, asset, issuer) {\r\n    try {\r\n        var cur_account = this.account.publicKey;\r\n        // const account = 'GBZWOEGPINOUOYYNWP5RX7RSKN2ICX32IP5CLMLKGAVG4IDP62Q56KRG'\r\n        const server = new Server('https://horizon-testnet.stellar.org');\r\n        var transaction_type = \"\";\r\n        var transaction_source = \"\";\r\n        var transaction_issuer = \"\";\r\n        var transaction_destination = \"\";\r\n        var transaction_starting_balance = \"\";\r\n        var transaction_asset_code = \"\";\r\n        var transaction_amount = \"\";\r\n        server.transactions()\r\n            .forAccount(account)\r\n            .call()\r\n            .then(({ records }) => {\r\n            loEach(records, (record) => {\r\n                const transaction = new Transaction(record.envelope_xdr, Networks.TESTNET);\r\n                for (let i = 0; i < transaction.operations.length; i++) {\r\n                    console.log(transaction.operations[i]);\r\n                    transaction_type = transaction.operations[i].type;\r\n                    if (transaction_type == \"createAccount\") {\r\n                        transaction_source = transaction.operations[i].source;\r\n                        transaction_destination = transaction.operations[i].destination;\r\n                        transaction_starting_balance = transaction.operations[i].startingBalance;\r\n                        console.log(\"Account created with \" + transaction_starting_balance + \" at destination \" + transaction_destination.slice(0, 4) + \" from source \" + transaction_source.slice(0, 4) + \".\");\r\n                    }\r\n                    else if (transaction_type == \"changeTrust\") {\r\n                        transaction_asset_code = transaction.operations[i].line.code;\r\n                        transaction_issuer = transaction.operations[i].line.issuer;\r\n                        console.log(\"Account is trusted by \" + transaction_issuer + \" to pay \" + transaction_asset_code + \".\");\r\n                    }\r\n                    else if (transaction_type == \"payment\") {\r\n                        transaction_destination = transaction.operations[i].destination;\r\n                        transaction_asset_code = transaction.operations[i].line.code;\r\n                        transaction_issuer = transaction.operations[i].line.issuer;\r\n                        transaction_amount = transaction.operations[i].amount;\r\n                        if (cur_account == transaction_destination) {\r\n                            // Current account was paid\r\n                            console.log(\"Account has been paid \" + transaction_amount + \" \" + transaction_asset_code + \" by \" + transaction_issuer + \".\");\r\n                        }\r\n                        else {\r\n                            // Current account was paying\r\n                            console.log(\"Account paid \" + transaction_amount + \" \" + transaction_asset_code + \" to \" + transaction_destination + \".\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        console.error(\"Unknown transaction type\");\r\n                    }\r\n                }\r\n            });\r\n        })\r\n            .catch((err) => console.error(err));\r\n    }\r\n    catch (err) {\r\n        this.error = handleError(err);\r\n    }\r\n}\r\n"}