{"moduleFile":{"sourceFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/wallet.ts","jsFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/wallet.js","cmps":[{"isLegacy":false,"tagName":"stellar-wallet","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Wallet","elementRef":null,"encapsulation":"shadow","shadowDelegatesFocus":false,"properties":[{"name":"server","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"new Server('https://horizon-testnet.stellar.org')","complexType":{"original":"Server","resolved":"Server","references":{"Server":{"location":"import","path":"stellar-sdk"}}},"docs":{"tags":[],"text":""},"internal":false},{"name":"homeDomain","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"'testanchor.stellar.org'","complexType":{"original":"String","resolved":"String","references":{"String":{"location":"global"}}},"docs":{"tags":[],"text":""},"internal":false},{"name":"toml","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"Object","resolved":"Object","references":{"Object":{"location":"global"}}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"account"},{"name":"prompter"},{"name":"loading"},{"name":"error"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"STELLAR-WALLET","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/wallet.scss","relativePath":"wallet.scss","originalComponentPath":"wallet.scss"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/wallet.js","sourceFilePath":"/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/wallet.ts","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":[],"htmlTagNames":[],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["lodash-es","stellar-sdk"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/events/componentWillLoad","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/events/render","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/createAccount","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/updateAccount","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/depositAsset","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/withdrawAsset","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/trustAsset","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/makePayment","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/copyAddress","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/copySecret","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/signOut","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/setPrompt","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewDetails","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewTransactions","/Users/alexchen/Desktop/HackNYU-2020/src/components/wallet/methods/viewBalances"],"originalCollectionComponentPath":null,"originalImports":["stellar-sdk","lodash-es","./events/componentWillLoad","./events/render","./methods/createAccount","./methods/updateAccount","./methods/depositAsset","./methods/withdrawAsset","./methods/trustAsset","./methods/makePayment","./methods/copyAddress","./methods/copySecret","./methods/signOut","./methods/setPrompt","./methods/viewDetails","./methods/viewTransactions","./methods/viewBalances"],"potentialCmpRefs":[]},"jsText":"import { Server, Transaction, Networks } from 'stellar-sdk';\r\nimport { each as loEach } from 'lodash-es';\r\nimport componentWillLoad from './events/componentWillLoad'; // UPDATE\r\nimport render from './events/render'; // UPDATE\r\nimport createAccount from './methods/createAccount';\r\nimport updateAccount from './methods/updateAccount';\r\nimport depositAsset from './methods/depositAsset'; // NEW\r\nimport withdrawAsset from './methods/withdrawAsset'; // NEW\r\nimport trustAsset from './methods/trustAsset';\r\nimport makePayment from './methods/makePayment';\r\nimport copyAddress from './methods/copyAddress';\r\nimport copySecret from './methods/copySecret';\r\nimport signOut from './methods/signOut';\r\nimport setPrompt from './methods/setPrompt';\r\nimport viewDetails from './methods/viewDetails';\r\nimport viewTransactions from './methods/viewTransactions';\r\nimport viewBalances from './methods/viewBalances';\r\n// Truncate decimal strings\r\nfunction tdr(str) {\r\n    for (var i = 0; i < str.length; i++) {\r\n        if (str[i] == '.') {\r\n            return str.slice(0, i + 3);\r\n        }\r\n    }\r\n}\r\nfunction findTransactionList(publicKey) {\r\n    // Find transactions\r\n    var cur_account = publicKey;\r\n    // const account = 'GBZWOEGPINOUOYYNWP5RX7RSKN2ICX32IP5CLMLKGAVG4IDP62Q56KRG'\r\n    const server = new Server('https://horizon-testnet.stellar.org');\r\n    var transaction_type = \"\";\r\n    var transaction_source = \"\";\r\n    var transaction_issuer = \"\";\r\n    var transaction_destination = \"\";\r\n    var transaction_starting_balance = \"\";\r\n    var transaction_asset_code = \"\";\r\n    var transaction_amount = \"\";\r\n    var text = \"\";\r\n    server.transactions()\r\n        .forAccount(cur_account)\r\n        .call()\r\n        .then(({ records }) => {\r\n        loEach(records, (record) => {\r\n            const transaction = new Transaction(record.envelope_xdr, Networks.TESTNET);\r\n            for (let i = 0; i < transaction.operations.length; i++) {\r\n                transaction_type = transaction.operations[i]['type'];\r\n                if (transaction_type == \"createAccount\") {\r\n                    transaction_source = transaction.operations[i]['source'];\r\n                    transaction_destination = transaction.operations[i]['destination'];\r\n                    transaction_starting_balance = transaction.operations[i]['startingBalance'];\r\n                    text = \"Account created with \" + tdr(transaction_starting_balance) + \" at destination \" + transaction_destination.slice(0, 4) + \" from source \" + transaction_source.slice(0, 4) + \".\\n\" + text;\r\n                }\r\n                else if (transaction_type == \"changeTrust\") {\r\n                    transaction_asset_code = transaction.operations[i]['line']['code'];\r\n                    transaction_issuer = transaction.operations[i]['line']['issuer'];\r\n                    text = \"Account is trusted by \" + transaction_issuer.slice(0, 4) + \" to pay \" + transaction_asset_code + \" currency.\\n\" + text;\r\n                }\r\n                else if (transaction_type == \"payment\") {\r\n                    transaction_destination = transaction.operations[i]['destination'];\r\n                    transaction_asset_code = transaction.operations[i]['asset']['code'];\r\n                    transaction_issuer = transaction.operations[i]['asset']['issuer'];\r\n                    transaction_amount = transaction.operations[i]['amount'];\r\n                    if (cur_account == transaction_destination) {\r\n                        // Current account was paid\r\n                        text = \"Account has been paid \" + tdr(transaction_amount) + \" \" + transaction_asset_code + \" by \" + transaction_issuer.slice(0, 4) + \".\\n\" + text;\r\n                    }\r\n                    else {\r\n                        // Current account was paying\r\n                        text = \"Account paid \" + tdr(transaction_amount) + \" \" + transaction_asset_code + \" to \" + transaction_destination.slice(0, 4) + \".\\n\" + text;\r\n                    }\r\n                }\r\n                else {\r\n                    console.error(\"Unknown transaction type\");\r\n                }\r\n            }\r\n        });\r\n        return text;\r\n    }).catch((err) => console.error(err));\r\n}\r\nexport class Wallet {\r\n    constructor() {\r\n        this.prompter = { show: false };\r\n        this.loading = {};\r\n        this.server = new Server('https://horizon-testnet.stellar.org');\r\n        this.homeDomain = 'testanchor.stellar.org';\r\n        // Stellar methods\r\n        this.createAccount = createAccount;\r\n        this.updateAccount = updateAccount;\r\n        this.depositAsset = depositAsset; // NEW\r\n        this.withdrawAsset = withdrawAsset; // NEW\r\n        this.trustAsset = trustAsset;\r\n        this.makePayment = makePayment;\r\n        this.copyAddress = copyAddress;\r\n        this.copySecret = copySecret;\r\n        this.signOut = signOut;\r\n        this.viewDetails = viewDetails;\r\n        this.viewTransactions = viewTransactions;\r\n        this.viewBalances = viewBalances;\r\n        // Misc methods\r\n        this.setPrompt = setPrompt;\r\n    }\r\n    // Component events\r\n    componentWillLoad() { }\r\n    render() { }\r\n    static get is() { return \"stellar-wallet\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"wallet.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"wallet.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"server\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Server\",\r\n                \"resolved\": \"Server\",\r\n                \"references\": {\r\n                    \"Server\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"stellar-sdk\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"new Server('https://horizon-testnet.stellar.org')\"\r\n        },\r\n        \"homeDomain\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"String\",\r\n                \"resolved\": \"String\",\r\n                \"references\": {\r\n                    \"String\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"'testanchor.stellar.org'\"\r\n        },\r\n        \"toml\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Object\",\r\n                \"resolved\": \"Object\",\r\n                \"references\": {\r\n                    \"Object\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"account\": {},\r\n        \"prompter\": {},\r\n        \"loading\": {},\r\n        \"error\": {}\r\n    }; }\r\n}\r\nWallet.prototype.componentWillLoad = componentWillLoad;\r\nWallet.prototype.render = render;\r\n"}